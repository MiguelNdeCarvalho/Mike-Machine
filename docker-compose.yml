version: "3.0"

networks:
  reverse:
  db:

services:
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/bazarr:/config
      - ${MEDIA_PATH}/movies:/movies
      - ${MEDIA_PATH}/tv:/tv
    ports:
      - 6767:6767
    restart: ${RESTART_POLICY}
  deluge:
    image: linuxserver/deluge
    container_name: deluge
    network_mode: host
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${CONFIGS_PATH}/deluge:/config
      - ${MEDIA_PATH}/downloads:/downloads
    restart: ${RESTART_POLICY}
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/heimdall:/config
    networks:
      - reverse
    restart: ${RESTART_POLICY}
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ${CONFIGS_PATH}/jackett:/config
    ports:
      - 9117:9117
    restart: ${RESTART_POLICY}
  swag:
    image: linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
      - URL=${DOMAIN}
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare 
      - EMAIL=${ADMIN_MAIL}
    volumes:
      - ${CONFIGS_PATH}/swag:/config
    ports:
      - 443:443
      - 80:80
    networks:
      - reverse
    restart: ${RESTART_POLICY}
  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - MYSQL_ROOT_PASSWORD=${ROOT_PW}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/mariadb:/config
    ports:
      - 3306:3306
    networks:
      - db
    restart: ${RESTART_POLICY}
  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/nextcloud:/config
      - ${DATA_PATH}/nextcloud_data:/data
    networks:
      - reverse
      - db
    restart: ${RESTART_POLICY}
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/ombi:/config
    networks:
      - reverse
    restart: ${RESTART_POLICY}
  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${CONFIGS_PATH}/plex:/config
      - ${MEDIA_PATH}/tv:/tv
      - ${MEDIA_PATH}/movies:/movies
    restart: ${RESTART_POLICY}
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/radarr:/config
      - ${MEDIA_PATH}/movies:/movies
      - ${MEDIA_PATH}/downloads:/downloads
    ports:
      - 7878:7878
    restart: ${RESTART_POLICY}
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/sonarr:/config
      - ${MEDIA_PATH}/tv:/tv
      - ${MEDIA_PATH}/downloads:/downloads
    ports:
      - 8989:8989
    restart: ${RESTART_POLICY}
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/plex:/config
      - ${DATA_PATH}/plex_logs:/logs
    ports:
      - 8181:8181
    restart: ${RESTART_POLICY}
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
      - SERVERURL=wg.${DOMAIN}
      - SERVERPORT=51820
      - PEERS=${WIREGUARD_CLIENTS}
      - PEERDNS=${WIREGUARD_DNS}
      - INTERNAL_SUBNET=10.13.13.0
    volumes:
      - ${CONFIGS_PATH}/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: ${RESTART_POLICY}
  homeassistant:
    image: homeassistant/home-assistant:stable
    container_name: homeassistant
    network_mode: host
    volumes:
      - ${CONFIGS_PATH}/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: ${RESTART_POLICY}
  redis:
    image: redis:6.0-alpine
    container_name: redis
    restart: ${RESTART_POLICY}
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=${TZ}
      - WEBPASSWORD=${PI_PASSWORD}
    volumes:
      - ${CONFIGS_PATH}/pihole:/etc/pihole/
      - ${CONFIGS_PATH}/dnsmasq.d:/etc/dnsmasq.d/
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 81:80/tcp
    restart: ${RESTART_POLICY}
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    environment:
      - API_KEY=${CLOUDFLARE_API}
      - ZONE=${DOMAIN}
      - SUBDOMAIN=${CLOUDFLARE_SUBDOMAIN}
      - PROXIED=${CLOUDFLARE_PROXIED}
    restart: ${RESTART_POLICY}
  netdata:
    image: netdata/netdata
    container_name: netdata
    environment:
      - PGID=${DOCKER_GID}
    hostname: netdata.${DOMAIN}
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: ${RESTART_POLICY}
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - ${CONFIGS_PATH}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: ${RESTART_POLICY}
  onlyoffice:
    image: onlyoffice/documentserver
    container_name: onlyoffice
    networks:
      - reverse
    restart: ${RESTART_POLICY}
  bitwarden:
    image: bitwardenrs/server-mysql
    container_name: bitwarden
    environment:
      - DOMAIN=https://bitwarden.${DOMAIN} 
      - ADMIN_TOKEN=ยง{BW_PASSWORD}
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - SMTP_HOST=${BW_SMTP_HOST}
      - SMTP_FROM=${BW_SMTP_FROM}
      - SMTP_PORT=${BW_SMTP_PORT}
      - SMTP_SSL=true
      - SMTP_USERNAME=${BW_SMTP_USERNAME}
      - SMTP_PASSWORD=${BW_SMTP_PASSWORD}
      - SHOW_PASSWORD_HINT=false
      - ENABLE_DB_WAL=false
      - DATABASE_URL=${BW_DATABASE}
    volumes:
      - ${CONFIGS_PATH}/bitwarden:/data/
    networks:
      - reverse
      - db
    restart: ${RESTART_POLICY}
  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TZ}
    volumes:
      - ${CONFIGS_PATH}/duplicati:/config
      - ${DATA_PATH}/backups:/backups
    ports:
      - 8200:8200
    restart: ${RESTART_POLICY}
  gitea:
    image: gitea/gitea
    container_name: gitea
    environment:
      - USER_UID=${USER_ID}
      - USER_GID=${GROUP_ID}
    ports:
      - 3000:3000
      - 22:22
    networks:
      - reverse
      - db
    volumes:
      - ${CONFIGS_PATH}/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    restart: ${RESTART_POLICY}
